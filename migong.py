def dfs(maze, start, end, path=[], required_points=[]):
    if start == end:
        if len(required_points) == 0:
            return path + [start]
        else:
            return None

    if start[0] < 0 or start[0] >= len(maze) or start[1] < 0 or start[1] >= len(maze[0]) or maze[start[0]][start[1]] == '#':
        return None

    if start in required_points:
        required_points.remove(start)

    maze[start[0]][start[1]] = '#'

    directions = [(0, 1), (0, -1), (1, 0), (-1, 0)]
    for direction in directions:
        next_position = (start[0] + direction[0], start[1] + direction[1])
        next_path = dfs(maze, next_position, end, path + [start], required_points)
        if next_path:
            return next_path

    return None

maze = [
    ['#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'],
    ['#',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' '],
    ['#',' ','#',' ','#',' ',' ',' ','#',' ','#',' ','#','#','#',' ','#',' ','#','#','#'],
    ['#',' ','#',' ','#',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ','#',' ',' ',' ','#'],
    ['#',' ','#','#','#',' ','#','#','#',' ','#','#','#',' ','#',' ','#','#','#',' ','#'],
    ['#',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ','#',' ',' ',' ','#'],
    ['#','#','#',' ','#',' ','#',' ','#','#','#','#','#',' ','#','#','#',' ','#','#','#'],
    ['#',' ',' ',' ','#',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ','#'],
    ['#',' ','#','#','#',' ','#',' ','#','#','#','#','#','#','#',' ','#','#','#',' ','#'],
    ['#',' ','#',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'],
    ['#',' ','#','#','#','#','#',' ','#','#','#','#','#',' ','#','#','#','#','#',' ','#'],
    ['#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ','#',' ','#'],
    ['#',' ','#','#','#',' ','#','#','#','#','#','#','#',' ','#',' ','#','#','#',' ','#'],
    ['#',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ','#',' ',' ',' ','#'],
    ['#','#','#',' ','#','#','#',' ','#','#','#','#','#',' ','#',' ','#',' ','#','#','#'],
    ['#',' ',' ',' ','#',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ','#'],
    ['#',' ','#','#','#',' ','#',' ','#','#','#',' ','#','#','#',' ','#','#','#',' ','#'],
    ['#',' ',' ',' ','#',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ','#',' ','#',' ','#'],
    ['#','#','#',' ','#',' ','#','#','#',' ','#',' ','#',' ',' ',' ','#',' ','#',' ','#'],
    [' ',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'],
    ['#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#']
]

start = (1, 1)
end = (3, 5)
path_points = [(2, 3), (3, 4)]

path = dfs(maze, start, end, required_points=path_points)
print(path)
